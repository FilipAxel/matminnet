import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import {
  Avatar,
  Button,
  Card,
  Dropdown,
  Grid,
  Row,
  Text,
  Container,
} from "@nextui-org/react";
import Catalog from "~/components/catalog";
import { MdOutlineLogout } from "react-icons/md";
import LoginActionDialog from "~/components/dialog/login-action-dialog";
import { useState } from "react";
import HomePageSkeleton from "~/components/skeleton/home-page-skeleton";
type Key = string | number;
export default function Home() {
  return (
    <>
      <Head>
        <title>Matminne</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <AuthShowcase />
        </div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const handleDropDownAction = async (option: Key) => {
    switch (option) {
      case "logout":
        try {
          await signOut();
        } catch (error) {}
        break;
      default:
        break;
    }
  };

  return (
    <>
      {sessionData ? null : (
        <>
          <HomePageSkeleton />
          <LoginActionDialog />
        </>
      )}

      {sessionData && (
        <Grid className="mr-4 mt-4 flex items-center justify-end">
          <Text className="mr-2">
            Welcome {sessionData?.user?.name as string}
          </Text>

          <Dropdown placement="bottom-left">
            <Dropdown.Trigger>
              <Avatar
                className="cursor-pointer"
                src={sessionData?.user?.image as string}
                text={sessionData?.user?.name as string}
                size="md"
              />
            </Dropdown.Trigger>
            <Dropdown.Menu
              disabledKeys={["profile"]}
              color="secondary"
              aria-label="Avatar Actions"
              // eslint-disable-next-line @typescript-eslint/no-misused-promises
              onAction={handleDropDownAction}
            >
              <Dropdown.Item key="profile" css={{ height: "$18" }}>
                <Text b color="inherit" css={{ d: "flex" }}>
                  Signed in as
                </Text>
                <Text b color="inherit" css={{ d: "flex" }}>
                  {sessionData?.user?.email}
                </Text>
              </Dropdown.Item>
              <Dropdown.Item
                key="logout"
                color="error"
                withDivider
                icon={<MdOutlineLogout size={22} fill="currentColor" />}
              >
                Log Out
              </Dropdown.Item>
            </Dropdown.Menu>
          </Dropdown>
        </Grid>
      )}
      <div className="flex flex-col items-center justify-center gap-4">
        <p className="text-center text-2xl text-white">
          {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        </p>

        {sessionData && (
          <div>
            <Catalog />
          </div>
        )}
      </div>
    </>
  );
}
